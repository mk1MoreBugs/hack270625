import asyncio
from datetime import datetime, timedelta
from uuid import uuid4
from sqlalchemy.ext.asyncio import AsyncSession
from app.crud import (
    crud_developer, crud_project, crud_building, crud_property,
    crud_property_address, crud_property_price, crud_residential_property,
    crud_property_features, crud_property_analytics, crud_commercial_property,
    crud_house_land, crud_property_media, crud_promo_tag, crud_mortgage_program,
    crud_promotion, crud_views_log, crud_booking
)
from app.models import (
    PropertyType, PropertyCategory, PropertyStatus, PropertyFeatures
)


async def create_mock_data(session: AsyncSession):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–æ–≥–æ –∫—Ä–∞—è"""
    
    print("üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º 5 –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–æ–≥–æ –∫—Ä–∞—è
    developers_data = [
        {"name": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å—Ç—Ä–æ–π"},
        {"name": "–Æ–≥–°—Ç—Ä–æ–π–ò–Ω–≤–µ—Å—Ç"},
        {"name": "–ö—É–±–∞–Ω—å–î–æ–º–°—Ç—Ä–æ–π"},
        {"name": "–°–æ—á–∏–°—Ç—Ä–æ–π–ì—Ä—É–ø–ø"},
        {"name": "–ê–Ω–∞–ø–∞–°—Ç—Ä–æ–π"}
    ]
    
    developers = []
    for dev_data in developers_data:
        developer = await crud_developer.create(session, dev_data)
        developers.append(developer)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫: {developer.name}")
    
    print("üè¢ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º 6 –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞
    projects_data = [
        # –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å—Ç—Ä–æ–π
        {"name": "–ñ–ö –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π", "developer_id": developers[0].id},
        {"name": "–ñ–ö –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", "developer_id": developers[0].id},
        {"name": "–ñ–ö –ó–∞–ø–∞–¥–Ω—ã–π", "developer_id": developers[0].id},
        {"name": "–ñ–ö –í–æ—Å—Ç–æ—á–Ω—ã–π", "developer_id": developers[0].id},
        {"name": "–ñ–ö –°–µ–≤–µ—Ä–Ω—ã–π", "developer_id": developers[0].id},
        {"name": "–ñ–ö –Æ–∂–Ω—ã–π", "developer_id": developers[0].id},
        
        # –Æ–≥–°—Ç—Ä–æ–π–ò–Ω–≤–µ—Å—Ç
        {"name": "–ñ–ö –ú–æ—Ä—Å–∫–æ–π", "developer_id": developers[1].id},
        {"name": "–ñ–ö –ü—Ä–∏–º–æ—Ä—Å–∫–∏–π", "developer_id": developers[1].id},
        {"name": "–ñ–ö –ü–∞—Ä–∫–æ–≤—ã–π", "developer_id": developers[1].id},
        {"name": "–ñ–ö –°–∞–¥–æ–≤—ã–π", "developer_id": developers[1].id},
        {"name": "–ñ–ö –õ–µ—Å–Ω–æ–π", "developer_id": developers[1].id},
        {"name": "–ñ–ö –†–µ—á–Ω–æ–π", "developer_id": developers[1].id},
        
        # –ö—É–±–∞–Ω—å–î–æ–º–°—Ç—Ä–æ–π
        {"name": "–ñ–ö –ö—É–±–∞–Ω—å", "developer_id": developers[2].id},
        {"name": "–ñ–ö –î–æ–Ω—Å–∫–æ–π", "developer_id": developers[2].id},
        {"name": "–ñ–ö –ê–∑–æ–≤—Å–∫–∏–π", "developer_id": developers[2].id},
        {"name": "–ñ–ö –ß–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–∏–π", "developer_id": developers[2].id},
        {"name": "–ñ–ö –ö–∞–≤–∫–∞–∑—Å–∫–∏–π", "developer_id": developers[2].id},
        {"name": "–ñ–ö –°—Ç–µ–ø–Ω–æ–π", "developer_id": developers[2].id},
        
        # –°–æ—á–∏–°—Ç—Ä–æ–π–ì—Ä—É–ø–ø
        {"name": "–ñ–ö –°–æ—á–∏ –¶–µ–Ω—Ç—Ä", "developer_id": developers[3].id},
        {"name": "–ñ–ö –ê–¥–ª–µ—Ä", "developer_id": developers[3].id},
        {"name": "–ñ–ö –•–æ—Å—Ç–∞", "developer_id": developers[3].id},
        {"name": "–ñ–ö –õ–∞–∑–∞—Ä–µ–≤—Å–∫–æ–µ", "developer_id": developers[3].id},
        {"name": "–ñ–ö –ö—Ä–∞—Å–Ω–∞—è –ü–æ–ª—è–Ω–∞", "developer_id": developers[3].id},
        {"name": "–ñ–ö –û–ª–∏–º–ø–∏–π—Å–∫–∏–π", "developer_id": developers[3].id},
        
        # –ê–Ω–∞–ø–∞–°—Ç—Ä–æ–π
        {"name": "–ñ–ö –ê–Ω–∞–ø–∞ –¶–µ–Ω—Ç—Ä", "developer_id": developers[4].id},
        {"name": "–ñ–ö –í–∏—Ç—è–∑–µ–≤–æ", "developer_id": developers[4].id},
        {"name": "–ñ–ö –î–∂–µ–º–µ—Ç–µ", "developer_id": developers[4].id},
        {"name": "–ñ–ö –°—É–∫–∫–æ", "developer_id": developers[4].id},
        {"name": "–ñ–ö –ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∞—è", "developer_id": developers[4].id},
        {"name": "–ñ–ö –£—Ç—Ä–∏—à", "developer_id": developers[4].id}
    ]
    
    projects = []
    for proj_data in projects_data:
        project = await crud_project.create(session, proj_data)
        projects.append(project)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç: {project.name}")
    
    print("üè† –°–æ–∑–¥–∞–Ω–∏–µ –∑–¥–∞–Ω–∏–π...")
    
    # –°–æ–∑–¥–∞–µ–º 5 –∑–¥–∞–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    buildings = []
    for project in projects:
        for i in range(5):
            building_data = {
                "name": f"–î–æ–º {i+1}",
                "project_id": project.id,
                "floors": 9 + (i % 5),  # 9-13 —ç—Ç–∞–∂–µ–π
                "completion_year": 2023 + (i % 3),  # 2023-2025
                "completion_status": 'completed' if i < 3 else 'in_progress'
            }
            building = await crud_building.create(session, building_data)
            buildings.append(building)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –∑–¥–∞–Ω–∏–µ: {building.id} –≤ –ø—Ä–æ–µ–∫—Ç–µ {project.name}")
    
    print("üèòÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏...")
    
    # –°–æ–∑–¥–∞–µ–º 6 –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–¥–∞–Ω–∏—è
    properties = []
    for building in buildings:
        for i in range(6):
            property_data = {
                "building_id": building.id,
                "project_id": building.project_id,
                "developer_id": next(p.developer_id for p in projects if p.id == building.project_id),
                "property_type": PropertyType.RESIDENTIAL,
                "category": PropertyCategory.primary,
                "status": PropertyStatus.available,
                "property_class": 'comfort',
                "total_area": 45.0 + (i * 15),  # 45-120 –º¬≤
                "living_area": 35.0 + (i * 12),  # 35-95 –º¬≤
                "rooms": 1 + (i % 4),  # 1-4 –∫–æ–º–Ω–∞—Ç—ã
                "floor": 1 + (i % 9),  # 1-9 —ç—Ç–∞–∂
                "balcony": i % 2 == 0,  # —á–µ—Ä–µ–¥—É–µ–º
                "loggia": i % 3 == 0,  # –∫–∞–∂–¥—ã–π —Ç—Ä–µ—Ç–∏–π
                "heating_type": 'central',
                "parking_type": 'underground' if i % 2 == 0 else 'open'
            }
            property_obj = await crud_property.create(session, property_data)
            properties.append(property_obj)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç: {property_obj.id} –≤ –∑–¥–∞–Ω–∏–∏ {building.id}")
    
    print("üìç –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤...")
    
    # –ê–¥—Ä–µ—Å–∞ –≤ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–æ–º –∫—Ä–∞–µ
    krasnodar_addresses = [
        {"city": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "street": "—É–ª. –ö—Ä–∞—Å–Ω–∞—è", "house": "1", "lat": 45.0448, "lng": 38.9760},
        {"city": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "street": "—É–ª. –°–µ–≤–µ—Ä–Ω–∞—è", "house": "15", "lat": 45.0522, "lng": 38.9725},
        {"city": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "street": "—É–ª. –ó–∞–ø–∞–¥–Ω–∞—è", "house": "25", "lat": 45.0489, "lng": 38.9687},
        {"city": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "street": "—É–ª. –í–æ—Å—Ç–æ—á–Ω–∞—è", "house": "8", "lat": 45.0567, "lng": 38.9812},
        {"city": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "street": "—É–ª. –Æ–∂–Ω–∞—è", "house": "12", "lat": 45.0412, "lng": 38.9745},
        {"city": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "street": "—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è", "house": "33", "lat": 45.0498, "lng": 38.9768},
        
        {"city": "–°–æ—á–∏", "street": "—É–ª. –ú–æ—Ä—Å–∫–∞—è", "house": "5", "lat": 43.5855, "lng": 39.7231},
        {"city": "–°–æ—á–∏", "street": "—É–ª. –ö—É—Ä–æ—Ä—Ç–Ω–∞—è", "house": "18", "lat": 43.5892, "lng": 39.7289},
        {"city": "–°–æ—á–∏", "street": "—É–ª. –ü–∞—Ä–∫–æ–≤–∞—è", "house": "22", "lat": 43.5821, "lng": 39.7215},
        {"city": "–°–æ—á–∏", "street": "—É–ª. –°–∞–¥–æ–≤–∞—è", "house": "7", "lat": 43.5876, "lng": 39.7254},
        {"city": "–°–æ—á–∏", "street": "—É–ª. –õ–µ—Å–Ω–∞—è", "house": "14", "lat": 43.5843, "lng": 39.7198},
        {"city": "–°–æ—á–∏", "street": "—É–ª. –†–µ—á–Ω–∞—è", "house": "9", "lat": 43.5867, "lng": 39.7223},
        
        {"city": "–ê–Ω–∞–ø–∞", "street": "—É–ª. –ù–∞–±–µ—Ä–µ–∂–Ω–∞—è", "house": "3", "lat": 44.8947, "lng": 37.3166},
        {"city": "–ê–Ω–∞–ø–∞", "street": "—É–ª. –ü–ª—è–∂–Ω–∞—è", "house": "11", "lat": 44.8965, "lng": 37.3189},
        {"city": "–ê–Ω–∞–ø–∞", "street": "—É–ª. –ö—É—Ä–æ—Ä—Ç–Ω–∞—è", "house": "16", "lat": 44.8932, "lng": 37.3145},
        {"city": "–ê–Ω–∞–ø–∞", "street": "—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è", "house": "24", "lat": 44.8958, "lng": 37.3172},
        {"city": "–ê–Ω–∞–ø–∞", "street": "—É–ª. –ú–æ—Ä—Å–∫–∞—è", "house": "8", "lat": 44.8971, "lng": 37.3198},
        {"city": "–ê–Ω–∞–ø–∞", "street": "—É–ª. –°–æ–ª–Ω–µ—á–Ω–∞—è", "house": "13", "lat": 44.8941, "lng": 37.3156},
        
        {"city": "–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫", "street": "—É–ª. –ú–æ—Ä—Å–∫–∞—è", "house": "6", "lat": 44.7239, "lng": 37.7683},
        {"city": "–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫", "street": "—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è", "house": "19", "lat": 44.7256, "lng": 37.7712},
        {"city": "–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫", "street": "—É–ª. –ü–æ—Ä—Ç–æ–≤–∞—è", "house": "4", "lat": 44.7218, "lng": 37.7654},
        {"city": "–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫", "street": "—É–ª. –ù–∞–±–µ—Ä–µ–∂–Ω–∞—è", "house": "27", "lat": 44.7245, "lng": 37.7698},
        {"city": "–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫", "street": "—É–ª. –ì–æ—Ä–Ω–∞—è", "house": "15", "lat": 44.7267, "lng": 37.7731},
        {"city": "–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫", "street": "—É–ª. –ü—Ä–∏–º–æ—Ä—Å–∫–∞—è", "house": "10", "lat": 44.7229, "lng": 37.7667},
        
        {"city": "–ê—Ä–º–∞–≤–∏—Ä", "street": "—É–ª. –õ–µ–Ω–∏–Ω–∞", "house": "2", "lat": 45.0013, "lng": 41.1164},
        {"city": "–ê—Ä–º–∞–≤–∏—Ä", "street": "—É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è", "house": "17", "lat": 45.0031, "lng": 41.1189},
        {"city": "–ê—Ä–º–∞–≤–∏—Ä", "street": "—É–ª. –ú–∏—Ä–∞", "house": "23", "lat": 44.9998, "lng": 41.1145},
        {"city": "–ê—Ä–º–∞–≤–∏—Ä", "street": "—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è", "house": "31", "lat": 45.0025, "lng": 41.1172},
        {"city": "–ê—Ä–º–∞–≤–∏—Ä", "street": "—É–ª. –®–∫–æ–ª—å–Ω–∞—è", "house": "5", "lat": 45.0042, "lng": 41.1198},
        {"city": "–ê—Ä–º–∞–≤–∏—Ä", "street": "—É–ª. –°–∞–¥–æ–≤–∞—è", "house": "20", "lat": 45.0007, "lng": 41.1156}
    ]
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥—Ä–µ—Å–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
    for i, property_obj in enumerate(properties):
        address_data = {
            "property_id": property_obj.id,
            **krasnodar_addresses[i % len(krasnodar_addresses)]
        }
        address = await crud_property_address.create(session, address_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥—Ä–µ—Å –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}")
    
    print("üí∞ –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–Ω...")
    
    # –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
    for i, property_obj in enumerate(properties):
        base_price = 50000 + (i * 5000)  # 50k - 350k –∑–∞ –º¬≤
        current_price = base_price * (0.95 + (i % 10) * 0.01)  # ¬±5% –æ—Ç –±–∞–∑–æ–≤–æ–π —Ü–µ–Ω—ã
        
        price_data = {
            "property_id": property_obj.id,
            "base_price": base_price,
            "current_price": current_price,
            "price_per_sqm": current_price / property_obj.total_area,
            "currency": "RUB"
        }
        price = await crud_property_price.create(session, price_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ü–µ–Ω–∞ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}: {current_price} —Ä—É–±/–º¬≤")
    
    print("üè† –°–æ–∑–¥–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∂–∏–ª—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∂–∏–ª—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    for i, property_obj in enumerate(properties):
        residential_data = {
            "property_id": property_obj.id,
            "ceiling_height": 2.7 + (i % 3) * 0.1,  # 2.7-2.9 –º
            "window_type": "–ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ" if i % 2 == 0 else "–¥–µ—Ä–µ–≤—è–Ω–Ω—ã–µ",
            "balcony_area": 3.0 + (i % 3) if property_obj.balcony else 0,
            "loggia_area": 4.0 + (i % 2) if property_obj.loggia else 0,
            "storage_room": i % 3 == 0,  # –∫–∞–∂–¥—ã–π —Ç—Ä–µ—Ç–∏–π
            "pantry": i % 4 == 0,  # –∫–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä—Ç—ã–π
            "separate_bathroom": i % 2 == 0,  # —á–µ—Ä–µ–¥—É–µ–º
            "combined_bathroom": i % 2 == 1,  # —á–µ—Ä–µ–¥—É–µ–º
            "kitchen_area": 8.0 + (i % 5)  # 8-12 –º¬≤
        }
        residential = await crud_residential_property.create(session, residential_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}")
    
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –æ–±—ä–µ–∫—Ç–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    for i, property_obj in enumerate(properties):
        features_data = {
            "property_id": property_obj.id,
            "elevator": True,
            "security": i % 2 == 0,  # —á–µ—Ä–µ–¥—É–µ–º
            "concierge": i % 3 == 0,  # –∫–∞–∂–¥—ã–π —Ç—Ä–µ—Ç–∏–π
            "parking": True,
            "playground": i % 2 == 0,  # —á–µ—Ä–µ–¥—É–µ–º
            "sports_ground": i % 4 == 0,  # –∫–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä—Ç—ã–π
            "green_area": True,
            "underground_parking": i % 2 == 0,  # —á–µ—Ä–µ–¥—É–µ–º
            "bicycle_parking": i % 3 == 0,  # –∫–∞–∂–¥—ã–π —Ç—Ä–µ—Ç–∏–π
            "electric_vehicle_charging": i % 5 == 0,  # –∫–∞–∂–¥—ã–π –ø—è—Ç—ã–π
            "smart_home": i % 4 == 0,  # –∫–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä—Ç—ã–π
            "air_conditioning": i % 2 == 0,  # —á–µ—Ä–µ–¥—É–µ–º
            "furniture": i % 3 == 0,  # –∫–∞–∂–¥—ã–π —Ç—Ä–µ—Ç–∏–π
            "appliances": i % 4 == 0,  # –∫–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä—Ç—ã–π
            "renovation": "–ø–æ–¥ –∫–ª—é—á" if i % 2 == 0 else "—á–µ—Ä–Ω–æ–≤–∞—è"
        }
        features = await crud_property_features.create(session, features_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}")
    
    print("üìä –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    for i, property_obj in enumerate(properties):
        analytics_data = {
            "property_id": property_obj.id,
            "views_count": 10 + (i % 50),  # 10-59 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
            "favorites_count": 2 + (i % 10),  # 2-11 –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
            "contact_requests": 1 + (i % 5),  # 1-5 –∑–∞–ø—Ä–æ—Å–æ–≤
            "avg_time_on_page": 120 + (i % 180),  # 2-5 –º–∏–Ω—É—Ç
            "bounce_rate": 0.3 + (i % 40) * 0.01,  # 30-70%
            "conversion_rate": 0.05 + (i % 15) * 0.01,  # 5-20%
            "price_change_count": i % 3,  # 0-2 –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
            "last_price_change": datetime.utcnow() - timedelta(days=i % 30),
            "market_value": property_obj.total_area * (45000 + (i % 10000)),  # —Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
            "price_per_sqm_market": 45000 + (i % 10000),  # —Ä—ã–Ω–æ—á–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ –º¬≤
            "price_difference_percent": (i % 20) - 10,  # ¬±10% –æ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π
            "days_on_market": 15 + (i % 45),  # 15-60 –¥–Ω–µ–π –Ω–∞ —Ä—ã–Ω–∫–µ
            "similar_properties_count": 5 + (i % 10),  # 5-14 –ø–æ—Ö–æ–∂–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤
            "avg_similar_price": 50000 + (i % 15000),  # —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø–æ—Ö–æ–∂–∏—Ö
            "price_competitiveness_score": 0.7 + (i % 30) * 0.01  # 70-100%
        }
        analytics = await crud_property_analytics.create(session, analytics_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}")
    
    print("üì∏ –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–¥–∏–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    for i, property_obj in enumerate(properties):
        for j in range(3):  # 3 –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç
            media_data = {
                "property_id": property_obj.id,
                "media_type": "image" if j == 0 else "video" if j == 1 else "virtual_tour",
                "url": f"https://example.com/media/{property_obj.id}/{j}.jpg",
                "title": f"–§–æ—Ç–æ {j+1} –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}",
                "description": f"–û–ø–∏—Å–∞–Ω–∏–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞ {j+1}",
                "is_primary": j == 0,  # –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ - –æ—Å–Ω–æ–≤–Ω–æ–µ
                "order_index": j
            }
            media = await crud_property_media.create(session, media_data)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –º–µ–¥–∏–∞ {j+1} –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}")
    
    print("üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ-—Ç–µ–≥–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–æ-—Ç–µ–≥–∏ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    promo_tags = ["–°–∫–∏–¥–∫–∞ 10%", "–ò–ø–æ—Ç–µ–∫–∞ 5%", "–°–∫–∏–¥–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ", "–ê–∫—Ü–∏—è", "–í—ã–≥–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"]
    for i, property_obj in enumerate(properties):
        if i % 3 == 0:  # –∫–∞–∂–¥—ã–π —Ç—Ä–µ—Ç–∏–π –æ–±—ä–µ–∫—Ç
            promo_data = {
                "property_id": property_obj.id,
                "tag_type": 'discount',
                "title": promo_tags[i % len(promo_tags)],
                "description": f"–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}",
                "discount_percent": 5 + (i % 15),  # 5-20% —Å–∫–∏–¥–∫–∞
                "valid_until": datetime.utcnow() + timedelta(days=30 + (i % 60))
            }
            promo_tag = await crud_promo_tag.create(session, promo_data)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–º–æ-—Ç–µ–≥ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}")
    
    print("üè¶ –°–æ–∑–¥–∞–Ω–∏–µ –∏–ø–æ—Ç–µ—á–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º...")
    
    # –°–æ–∑–¥–∞–µ–º –∏–ø–æ—Ç–µ—á–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    mortgage_programs = [
        {"name": "–°–±–µ—Ä–±–∞–Ω–∫ –ò–ø–æ—Ç–µ–∫–∞", "bank": "–°–±–µ—Ä–±–∞–Ω–∫", "rate": 7.5, "min_down_payment": 15},
        {"name": "–í–¢–ë –ò–ø–æ—Ç–µ–∫–∞", "bank": "–í–¢–ë", "rate": 8.2, "min_down_payment": 20},
        {"name": "–†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫ –ò–ø–æ—Ç–µ–∫–∞", "bank": "–†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫", "rate": 7.8, "min_down_payment": 10},
        {"name": "–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫ –ò–ø–æ—Ç–µ–∫–∞", "bank": "–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫", "rate": 8.5, "min_down_payment": 25},
        {"name": "–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ –ò–ø–æ—Ç–µ–∫–∞", "bank": "–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫", "rate": 8.8, "min_down_payment": 30}
    ]
    
    for i, program_data in enumerate(mortgage_programs):
        for j in range(10):  # 10 –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É
            property_index = (i * 10 + j) % len(properties)
            property_obj = properties[property_index]
            
            mortgage_data = {
                "property_id": property_obj.id,
                "program_type": 'standard',
                "bank_name": program_data["bank"],
                "program_name": program_data["name"],
                "interest_rate": program_data["rate"],
                "min_down_payment_percent": program_data["min_down_payment"],
                "max_loan_amount": 15000000,  # 15 –º–ª–Ω
                "loan_term_years": 20,
                "monthly_payment": property_obj.total_area * 50000 * 0.8 / 240,  # –ø—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç
                "requirements": "–í–æ–∑—Ä–∞—Å—Ç –æ—Ç 21 –≥–æ–¥–∞, —Å—Ç–∞–∂ –æ—Ç 6 –º–µ—Å—è—Ü–µ–≤",
                "documents": "–ü–∞—Å–ø–æ—Ä—Ç, —Å–ø—Ä–∞–≤–∫–∞ –æ –¥–æ—Ö–æ–¥–∞—Ö, –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å"
            }
            mortgage = await crud_mortgage_program.create(session, mortgage_data)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–ø–æ—Ç–µ—á–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ {program_data['name']} –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}")
    
    print("üéâ –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫—Ü–∏–π...")
    
    # –°–æ–∑–¥–∞–µ–º –∞–∫—Ü–∏–∏
    promotions_data = [
        {"name": "–í–µ—Å–µ–Ω–Ω—è—è —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞", "type": 'discount', "discount_percent": 15},
        {"name": "–ò–ø–æ—Ç–µ–∫–∞ –±–µ–∑ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞", "type": 'mortgage', "discount_percent": 0},
        {"name": "–°–∫–∏–¥–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –¥–≤—É—Ö –æ–±—ä–µ–∫—Ç–æ–≤", "type": 'bulk', "discount_percent": 20},
        {"name": "–ê–∫—Ü–∏—è –¥–ª—è –º–æ–ª–æ–¥—ã—Ö —Å–µ–º–µ–π", "type": 'special', "discount_percent": 10},
        {"name": "–°–∫–∏–¥–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –Ω–∞–ª–∏—á–Ω—ã–º–∏", "type": 'cash', "discount_percent": 5}
    ]
    
    for i, promo_data in enumerate(promotions_data):
        promotion_data = {
            "name": promo_data["name"],
            "description": f"–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: {promo_data['name']}",
            "promotion_type": promo_data["type"],
            "discount_percent": promo_data["discount_percent"],
            "start_date": datetime.utcnow(),
            "end_date": datetime.utcnow() + timedelta(days=90),
            "is_active": True,
            "max_uses": 100,
            "current_uses": 0
        }
        promotion = await crud_promotion.create(session, promotion_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∞–∫—Ü–∏—è: {promo_data['name']}")
    
    print("üëÅÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–æ–≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    for i, property_obj in enumerate(properties):
        for j in range(3):  # 3 –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç
            view_data = {
                "property_id": property_obj.id,
                "user_id": 1,  # –∞–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                "viewed_at": datetime.utcnow() - timedelta(hours=j),
                "session_duration": 60 + (j * 30),  # 1-2.5 –º–∏–Ω—É—Ç—ã
                "source": "search" if j == 0 else "recommendations" if j == 1 else "direct"
            }
            view = await crud_views_log.create(session, view_data)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ª–æ–≥ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ {j+1} –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}")
    
    print("üìÖ –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
    for i in range(10):  # 10 –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
        property_obj = properties[i % len(properties)]
        booking_data = {
            "property_id": property_obj.id,
            "user_id": 1,  # —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            "status": "active",
            "booked_at": datetime.utcnow() - timedelta(hours=i),
            "expires_at": datetime.utcnow() + timedelta(hours=24 - i)
        }
        booking = await crud_booking.create(session, booking_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {property_obj.id}")
    
    print("‚úÖ –í—Å–µ –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!") 