from contextlib import asynccontextmanager
from fastapi import FastAPI, Depends, HTTPException, status
from fastapi.middleware.cors import CORSMiddleware
from fastapi.security import HTTPBasic, HTTPBasicCredentials
from app.config import settings
from app.database import create_db_and_tables
from app.api import (
    apartments, developers, projects, dynamic_pricing,
    users, bookings, promotions, analytics, map,
    ai_matching, webhooks
)
import secrets


security = HTTPBasic()


def verify_docs_access(credentials: HTTPBasicCredentials = Depends(security)):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"""
    is_username_correct = secrets.compare_digest(
        credentials.username.encode("utf8"),
        settings.docs_username.encode("utf8")
    )
    is_password_correct = secrets.compare_digest(
        credentials.password.encode("utf8"),
        settings.docs_password.encode("utf8")
    )
    
    if not (is_username_correct and is_password_correct):
        raise HTTPException(
            status_code=status.HTTP_401_UNAUTHORIZED,
            detail="–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
            headers={"WWW-Authenticate": "Basic"},
        )
    return credentials


@asynccontextmanager
async def lifespan(app: FastAPI):
    """Lifespan –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –æ—á–∏—Å—Ç–∫–∏"""
    # Startup
    await create_db_and_tables()
    print("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 4.0 –∑–∞–ø—É—â–µ–Ω–æ!")
    print(f"üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:8000/docs")
    print(f"üîç ReDoc: http://localhost:8000/redoc")
    
    yield
    
    # Shutdown
    print("üõë –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 4.0 –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")


# –°–æ–∑–¥–∞–µ–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI(
    title="–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 4.0 API",
    description="API –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏",
    version="1.0.0",
    lifespan=lifespan,
    openapi_url=f"{settings.api_v1_str}/openapi.json",
    #docs_url=None,  # –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    #redoc_url=None  # –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(users, prefix="/api/v1")
app.include_router(developers, prefix="/api/v1")
app.include_router(projects, prefix="/api/v1")
app.include_router(apartments, prefix="/api/v1")
app.include_router(bookings, prefix="/api/v1")
app.include_router(promotions, prefix="/api/v1")
app.include_router(analytics, prefix="/api/v1")
app.include_router(map, prefix="/api/v1")
app.include_router(ai_matching, prefix="/api/v1")
app.include_router(dynamic_pricing, prefix="/api/v1")
app.include_router(webhooks, prefix="/api/v1")


@app.get("/")
async def root():
    """–ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç"""
    return {
        "name": "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 4.0 API",
        "version": "1.0.0",
        "docs_url": "/docs",
        "redoc_url": "/redoc"
    }


@app.get("/health")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return {
        "status": "healthy",
        "service": "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 4.0",
        "version": settings.version,
        "timestamp": "2024-01-01T00:00:00Z"
    }


# –°–æ–∑–¥–∞–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
@app.get("/docs", include_in_schema=False)
async def get_swagger_ui_html(credentials: HTTPBasicCredentials = Depends(verify_docs_access)):
    """–ó–∞—â–∏—â–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è Swagger UI"""
    from fastapi.openapi.docs import get_swagger_ui_html
    return get_swagger_ui_html(
        openapi_url=f"{settings.api_v1_str}/openapi.json",
        title=f"{settings.project_name} - Swagger UI"
    )

@app.get("/redoc", include_in_schema=False)
async def get_redoc_html(credentials: HTTPBasicCredentials = Depends(verify_docs_access)):
    """–ó–∞—â–∏—â–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è ReDoc"""
    from fastapi.openapi.docs import get_redoc_html
    return get_redoc_html(
        openapi_url=f"{settings.api_v1_str}/openapi.json",
        title=f"{settings.project_name} - ReDoc"
    )

@app.get(f"{settings.api_v1_str}/openapi.json", include_in_schema=False)
async def get_openapi_json(credentials: HTTPBasicCredentials = Depends(verify_docs_access)):
    """–ó–∞—â–∏—â–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è OpenAPI JSON"""
    return app.openapi()
