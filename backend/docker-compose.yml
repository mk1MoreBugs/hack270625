services:
  # PostgreSQL база данных
  postgres:
    image: postgres:17.5-alpine
    environment:
      POSTGRES_DB: real_estate_db
      POSTGRES_USER: real_estate_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - real_estate_network
    env_file:
      - .env
    secrets:
      - postgres_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U real_estate_user -d real_estate_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis для Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - real_estate_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI приложение
  app:
    build: .
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=real_estate_db
      - POSTGRES_USER=real_estate_user
      - POSTGRES_PASSWORD_FILE=/app/db_password.txt
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - real_estate_network
    volumes:
      - "./app:/backend/app"
      - ./db_password.txt:/app/db_password.txt:ro

  # Celery worker
  celery_worker:
    build: .
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=real_estate_db
      - POSTGRES_USER=real_estate_user
      - POSTGRES_PASSWORD_FILE=/app/db_password.txt
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - real_estate_network
    volumes:
      - ./db_password.txt:/app/db_password.txt:ro
    command: celery -A app.worker.celery_app worker --loglevel=info

  # Celery beat (планировщик задач)
  celery_beat:
    build: .
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=real_estate_db
      - POSTGRES_USER=real_estate_user
      - POSTGRES_PASSWORD_FILE=/app/db_password.txt
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - real_estate_network
    volumes:
      - ./db_password.txt:/app/db_password.txt:ro
    command: celery -A app.worker.celery_app beat --loglevel=info

volumes:
  postgres_data:

networks:
  real_estate_network:
    driver: bridge

secrets:
  postgres_password:
    file: ./db_password.txt
